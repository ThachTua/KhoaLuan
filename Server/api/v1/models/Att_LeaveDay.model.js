const mongoose = require("mongoose");
const Schema = mongoose.Schema;

const Att_LeaveDaySchema = new Schema({
  ID: { type: Schema.Types.String },
  ProfileID: { type: Schema.Types.String },
  LeaveDayTypeID: { type: Schema.Types.String },
  UserApproveID: { type: Schema.Types.String },
  UserApproveID2: { type: Schema.Types.String },
  InsuranceRecordID: { type: Schema.Types.String },
  DateStart: { type: Schema.Types.String },
  DateEnd: { type: Schema.Types.String },
  Status: { type: Schema.Types.String },
  CommentApprove: { type: Schema.Types.String },
  Comment: { type: Schema.Types.String },
  DeclineReason: { type: Schema.Types.String },
  UserRegister: { type: Schema.Types.String },
  DateRegister: { type: Schema.Types.String },
  UserApprove: { type: Schema.Types.String },
  DateApprove: { type: Schema.Types.String },
  Duration: { type: Schema.Types.String },
  TotalDuration: { type: Schema.Types.String },
  DurationType: { type: Schema.Types.String },
  RelativesID: { type: Schema.Types.String },
  RelativeTypeID: { type: Schema.Types.String },
  Voucher: { type: Schema.Types.String },
  ServerUpdate: { type: Schema.Types.String },
  ServerCreate: { type: Schema.Types.String },
  UserUpdate: { type: Schema.Types.String },
  UserCreate: { type: Schema.Types.String },
  DateCreate: { type: Schema.Types.String },
  DateUpdate: { type: Schema.Types.String },
  UserLockID: { type: Schema.Types.String },
  DateLock: { type: Schema.Types.String },
  IsDelete: { type: Schema.Types.String },
  IPCreate: { type: Schema.Types.String },
  IPUpdate: { type: Schema.Types.String },
  PayMethod: { type: Schema.Types.String },
  IsInvalidIns: { type: Schema.Types.String },
  LeaveFormNo: { type: Schema.Types.String },
  OvertimeID: { type: Schema.Types.String },
  UserOutSys: { type: Schema.Types.String },
  SendEmailStatus: { type: Schema.Types.String },
  UserRejectID: { type: Schema.Types.String },
  DateReject: { type: Schema.Types.String },
  LeaveDays: { type: Schema.Types.String },
  LeaveHours: { type: Schema.Types.String },
  DateOvertimeOff: { type: Schema.Types.String },
  OrgStructureID: { type: Schema.Types.String },
  FileAttachment: { type: Schema.Types.String },
  ShiftID: { type: Schema.Types.String },
  TypeHalfShift: { type: Schema.Types.String },
  UserApproveID3: { type: Schema.Types.String },
  MedicalDocument: { type: Schema.Types.String },
  StatusSendMail: { type: Schema.Types.String },
  PaybackDurationID: { type: Schema.Types.String },
  DateRequest: { type: Schema.Types.String },
  UserProcessApproveID: { type: Schema.Types.String },
  UserProcessApproveID2: { type: Schema.Types.String },
  UserProcessApproveID3: { type: Schema.Types.String },
  CostCentreID: { type: Schema.Types.String },
  WorkPlaceID: { type: Schema.Types.String },
  JobTitleID: { type: Schema.Types.String },
  PositionID: { type: Schema.Types.String },
  SalaryClassID: { type: Schema.Types.String },
  PayrollGroupID: { type: Schema.Types.String },
  SalGradeID: { type: Schema.Types.String },
  AttGradeID: { type: Schema.Types.String },
  CostActivityID: { type: Schema.Types.String },
  EmployeeGroupID: { type: Schema.Types.String },
  LaborType: { type: Schema.Types.String },
  EmployeeTypeID: { type: Schema.Types.String },
  SortID: { type: Schema.Types.String },
  ShiftDetailID: { type: Schema.Types.String },
  UserApproveID4: { type: Schema.Types.String },
  UserProcessApproveID4: { type: Schema.Types.String },
  UserSubmit: { type: Schema.Types.String },
  AbilityTileID: { type: Schema.Types.String },
  PayrollCategoryID: { type: Schema.Types.String },
  UnitStructureID: { type: Schema.Types.String },
  CompanyID: { type: Schema.Types.String },
  IsPayback: { type: Schema.Types.String },
  HaveMeal: { type: Schema.Types.String },
  BusinessReason: { type: Schema.Types.String },
  Type: { type: Schema.Types.String },
  MissionPlaceInID: { type: Schema.Types.String },
  MissionPlaceOutID: { type: Schema.Types.String },
  MissionDistanceID: { type: Schema.Types.String },
  VehicleID: { type: Schema.Types.String },
  NoNightStay: { type: Schema.Types.String },
  IsHaveCosts: { type: Schema.Types.String },
  UserCanelID: { type: Schema.Types.String },
  DateCancel: { type: Schema.Types.String },
  Label: { type: Schema.Types.String },
  ApproveComment1: { type: Schema.Types.String },
  ApproveComment2: { type: Schema.Types.String },
  ApproveComment3: { type: Schema.Types.String },
  ApproveComment4: { type: Schema.Types.String },
  CommentCancel: { type: Schema.Types.String },
});

const Att_LeaveDayModel = mongoose.model("Att_LeaveDay", Att_LeaveDaySchema);

module.exports = Att_LeaveDayModel;
