const mongoose = require("mongoose");
const Schema = mongoose.Schema;

const Hre_StopWorkingSchema = new Schema({
  ID: { type: Schema.Types.String },
  StopWorkType: { type: Schema.Types.String },
  ResignReasonID: { type: Schema.Types.String },
  DateStop: { type: Schema.Types.String },
  Status: { type: Schema.Types.String },
  IsHoldSal: { type: Schema.Types.String },
  LastStatusSyn: { type: Schema.Types.String },
  ServerUpdate: { type: Schema.Types.String },
  ServerCreate: { type: Schema.Types.String },
  UserUpdate: { type: Schema.Types.String },
  UserCreate: { type: Schema.Types.String },
  DateCreate: { type: Schema.Types.String },
  DateUpdate: { type: Schema.Types.String },
  UserLockID: { type: Schema.Types.String },
  DateLock: { type: Schema.Types.String },
  IsDelete: { type: Schema.Types.String },
  IPCreate: { type: Schema.Types.String },
  IPUpdate: { type: Schema.Types.String },
  ProfileID: { type: Schema.Types.String },
  Note: { type: Schema.Types.String },
  TypeSuspense: { type: Schema.Types.String },
  DateComeBack: { type: Schema.Types.String },
  DateExpired: { type: Schema.Types.String },
  StatusComeBack: { type: Schema.Types.String },
  RequestDate: { type: Schema.Types.String },
  RequestDateComeBack: { type: Schema.Types.String },
  NoPrint: { type: Schema.Types.String },
  TypeOfStop: { type: Schema.Types.String },
  DecisionNo: { type: Schema.Types.String },
  TypeOfStopID: { type: Schema.Types.String },
  OrgID: { type: Schema.Types.String },
  JobTitleID: { type: Schema.Types.String },
  PositionID: { type: Schema.Types.String },
  OrgStructureID: { type: Schema.Types.String },
  StoredDocuments: { type: Schema.Types.String },
  DateQuitSign: { type: Schema.Types.String },
  RankDetailID: { type: Schema.Types.String },
  ContractTypeID: { type: Schema.Types.String },
  ExpireContractDate: { type: Schema.Types.String },
  CostCenterID: { type: Schema.Types.String },
  WorkPlaceID: { type: Schema.Types.String },
  DateCombackExpected: { type: Schema.Types.String },
  DateQuitSubmit: { type: Schema.Types.String },
  DateQuitApprove: { type: Schema.Types.String },
  SortID: { type: Schema.Types.String },
  DateEndUnion: { type: Schema.Types.String },
  OtherReason: { type: Schema.Types.String },
  UserSubmit: { type: Schema.Types.String },
  UserApproveID: { type: Schema.Types.String },
  UserApproveID2: { type: Schema.Types.String },
  UserApproveID3: { type: Schema.Types.String },
  UserApproveID4: { type: Schema.Types.String },
  UserProcessID: { type: Schema.Types.String },
  UserProcessID2: { type: Schema.Types.String },
  UserProcessID3: { type: Schema.Types.String },
  UserProcessID4: { type: Schema.Types.String },
  IsCreateContract: { type: Schema.Types.String },
  IsCreateSal: { type: Schema.Types.String },
  IsCreateInsSal: { type: Schema.Types.String },
  AnnualLeave: { type: Schema.Types.String },
  DateQuitInLaw: { type: Schema.Types.String },
  SurveyProfileID: { type: Schema.Types.String },
  TrainingDeduct: { type: Schema.Types.String },
  IsBlackList: { type: Schema.Types.String },
  ReasonBackList: { type: Schema.Types.String },
  EmployeeGroupID: { type: Schema.Types.String },
  RegionID: { type: Schema.Types.String },
  PayrollGroupID: { type: Schema.Types.String },
  PayrollCategoryID: { type: Schema.Types.String },
  LaborType: { type: Schema.Types.String },
  EmpTypeID: { type: Schema.Types.String },
  TypeStopWorking: { type: Schema.Types.String },
  CompanyID: { type: Schema.Types.String },
  CodeEmpNew: { type: Schema.Types.String },
  Attachment: { type: Schema.Types.String },
  DateSenior: { type: Schema.Types.String },
  CodeAttendance: { type: Schema.Types.String },
  SocialInsDeliveryDate: { type: Schema.Types.String },
  CodeEmpOld: { type: Schema.Types.String },
  LastWorkingDay: { type: Schema.Types.String },
  PaymentDay: { type: Schema.Types.String },
  SendEmailStatus: { type: Schema.Types.String },
  CutOffDurationID: { type: Schema.Types.String },
  Settlement: { type: Schema.Types.String },
});

const Hre_StopWorkingModel = mongoose.model(
  "Hre_StopWorking",
  Hre_StopWorkingSchema
);

module.exports = Hre_StopWorkingModel;
